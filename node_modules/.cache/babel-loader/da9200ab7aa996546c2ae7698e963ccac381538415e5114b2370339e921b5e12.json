{"ast":null,"code":"module.exports = sortByProcedure;\n\n/*\n\tsort the parts of the passed selector,\n\tas there is potential for optimization\n\t(some types of selectors are faster than others)\n*/\n\nvar procedure = require(\"./procedure.json\");\nvar attributes = {\n  __proto__: null,\n  exists: 10,\n  equals: 8,\n  not: 7,\n  start: 6,\n  end: 6,\n  any: 5,\n  hyphen: 4,\n  element: 4\n};\nfunction sortByProcedure(arr) {\n  var procs = arr.map(getProcedure);\n  for (var i = 1; i < arr.length; i++) {\n    var procNew = procs[i];\n    if (procNew < 0) continue;\n    for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n      var token = arr[j + 1];\n      arr[j + 1] = arr[j];\n      arr[j] = token;\n      procs[j + 1] = procs[j];\n      procs[j] = procNew;\n    }\n  }\n}\nfunction getProcedure(token) {\n  var proc = procedure[token.type];\n  if (proc === procedure.attribute) {\n    proc = attributes[token.action];\n    if (proc === attributes.equals && token.name === \"id\") {\n      //prefer ID selectors (eg. #ID)\n      proc = 9;\n    }\n    if (token.ignoreCase) {\n      //ignoreCase adds some overhead, prefer \"normal\" token\n      //this is a binary operation, to ensure it's still an int\n      proc >>= 1;\n    }\n  } else if (proc === procedure.pseudo) {\n    if (!token.data) {\n      proc = 3;\n    } else if (token.name === \"has\" || token.name === \"contains\") {\n      proc = 0; //expensive in any case\n    } else if (token.name === \"matches\" || token.name === \"not\") {\n      proc = 0;\n      for (var i = 0; i < token.data.length; i++) {\n        //TODO better handling of complex selectors\n        if (token.data[i].length !== 1) continue;\n        var cur = getProcedure(token.data[i][0]);\n        //avoid executing :has or :contains\n        if (cur === 0) {\n          proc = 0;\n          break;\n        }\n        if (cur > proc) proc = cur;\n      }\n      if (token.data.length > 1 && proc > 0) proc -= 1;\n    } else {\n      proc = 1;\n    }\n  }\n  return proc;\n}","map":{"version":3,"names":["module","exports","sortByProcedure","procedure","require","attributes","__proto__","exists","equals","not","start","end","any","hyphen","element","arr","procs","map","getProcedure","i","length","procNew","j","token","proc","type","attribute","action","name","ignoreCase","pseudo","data","cur"],"sources":["C:/Users/Microsoft/OneDrive/Documents/c prgramming/.dist/react js/songProject/my-app/node_modules/cheerio/node_modules/css-select/lib/sort.js"],"sourcesContent":["module.exports = sortByProcedure;\n\n/*\n\tsort the parts of the passed selector,\n\tas there is potential for optimization\n\t(some types of selectors are faster than others)\n*/\n\nvar procedure = require(\"./procedure.json\");\n\nvar attributes = {\n\t__proto__: null,\n\texists: 10,\n\tequals: 8,\n\tnot: 7,\n\tstart: 6,\n\tend: 6,\n\tany: 5,\n\thyphen: 4,\n\telement: 4\n};\n\nfunction sortByProcedure(arr){\n\tvar procs = arr.map(getProcedure);\n\tfor(var i = 1; i < arr.length; i++){\n\t\tvar procNew = procs[i];\n\n\t\tif(procNew < 0) continue;\n\n\t\tfor(var j = i - 1; j >= 0 && procNew < procs[j]; j--){\n\t\t\tvar token = arr[j + 1];\n\t\t\tarr[j + 1] = arr[j];\n\t\t\tarr[j] = token;\n\t\t\tprocs[j + 1] = procs[j];\n\t\t\tprocs[j] = procNew;\n\t\t}\n\t}\n}\n\nfunction getProcedure(token){\n\tvar proc = procedure[token.type];\n\n\tif(proc === procedure.attribute){\n\t\tproc = attributes[token.action];\n\n\t\tif(proc === attributes.equals && token.name === \"id\"){\n\t\t\t//prefer ID selectors (eg. #ID)\n\t\t\tproc = 9;\n\t\t}\n\n\t\tif(token.ignoreCase){\n\t\t\t//ignoreCase adds some overhead, prefer \"normal\" token\n\t\t\t//this is a binary operation, to ensure it's still an int\n\t\t\tproc >>= 1;\n\t\t}\n\t} else if(proc === procedure.pseudo){\n\t\tif(!token.data){\n\t\t\tproc = 3;\n\t\t} else if(token.name === \"has\" || token.name === \"contains\"){\n\t\t\tproc = 0; //expensive in any case\n\t\t} else if(token.name === \"matches\" || token.name === \"not\"){\n\t\t\tproc = 0;\n\t\t\tfor(var i = 0; i < token.data.length; i++){\n\t\t\t\t//TODO better handling of complex selectors\n\t\t\t\tif(token.data[i].length !== 1) continue;\n\t\t\t\tvar cur = getProcedure(token.data[i][0]);\n\t\t\t\t//avoid executing :has or :contains\n\t\t\t\tif(cur === 0){\n\t\t\t\t\tproc = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(cur > proc) proc = cur;\n\t\t\t}\n\t\t\tif(token.data.length > 1 && proc > 0) proc -= 1;\n\t\t} else {\n\t\t\tproc = 1;\n\t\t}\n\t}\n\treturn proc;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}