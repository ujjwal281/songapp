{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Microsoft\\\\OneDrive\\\\Documents\\\\c prgramming\\\\.dist\\\\react js\\\\songProject\\\\my-app\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Player from \"./Player\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"8b945ef10ea24755b83ac50cede405a0\"\n});\nexport default function Dashboard(_ref) {\n  _s();\n  let {\n    code\n  } = _ref;\n  const accessToken = code;\n  console.log(accessToken);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState(\"\");\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n    setLyrics(\"\");\n  }\n\n  // useEffect(() => {\n  //   if (!playingTrack) return\n  //   axios\n  //     .get(\"http://localhost:3001/lyrics\", {\n  //       params: {\n  //         track: playingTrack.title,\n  //         artist: playingTrack.artist,\n  //       },\n  //     })\n  //     .then(res => {\n  //       setLyrics(res.data.lyrics)\n  //     })\n  // }, [playingTrack])\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: [searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n        track: track,\n        chooseTrack: chooseTrack\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          whiteSpace: \"pre\"\n        },\n        children: lyrics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"02ekd3GWDY2ZQPymUOZuGEP5sZ8=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","Player","TrackSearchResult","Container","Form","SpotifyWebApi","axios","jsxDEV","_jsxDEV","spotifyApi","clientId","Dashboard","_ref","_s","code","accessToken","console","log","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","chooseTrack","track","setAccessToken","cancel","searchTracks","then","res","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","className","style","children","Control","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","overflowY","length","whiteSpace","trackUri","_c","$RefreshReg$"],"sources":["C:/Users/Microsoft/OneDrive/Documents/c prgramming/.dist/react js/songProject/my-app/src/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport Player from \"./Player\"\r\nimport TrackSearchResult from \"./TrackSearchResult\"\r\nimport { Container, Form } from \"react-bootstrap\"\r\nimport SpotifyWebApi from \"spotify-web-api-node\"\r\nimport axios from \"axios\"\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n  clientId: \"8b945ef10ea24755b83ac50cede405a0\",\r\n})\r\n\r\nexport default function Dashboard({ code }) {\r\n  const accessToken = code;\r\n  console.log(accessToken);\r\n  const [search, setSearch] = useState(\"\")\r\n  const [searchResults, setSearchResults] = useState([])\r\n  const [playingTrack, setPlayingTrack] = useState()\r\n  const [lyrics, setLyrics] = useState(\"\")\r\n\r\n  function chooseTrack(track) {\r\n    setPlayingTrack(track)\r\n    setSearch(\"\")\r\n    setLyrics(\"\")\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (!playingTrack) return\r\n  //   axios\r\n  //     .get(\"http://localhost:3001/lyrics\", {\r\n  //       params: {\r\n  //         track: playingTrack.title,\r\n  //         artist: playingTrack.artist,\r\n  //       },\r\n  //     })\r\n  //     .then(res => {\r\n  //       setLyrics(res.data.lyrics)\r\n  //     })\r\n  // }, [playingTrack])\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return\r\n    spotifyApi.setAccessToken(accessToken)\r\n  }, [accessToken])\r\n\r\n  useEffect(() => {\r\n    if (!search) return setSearchResults([])\r\n    if (!accessToken) return\r\n\r\n    let cancel = false\r\n    spotifyApi.searchTracks(search).then(res => {\r\n      if (cancel) return\r\n      setSearchResults(\r\n        res.body.tracks.items.map(track => {\r\n          const smallestAlbumImage = track.album.images.reduce(\r\n            (smallest, image) => {\r\n              if (image.height < smallest.height) return image\r\n              return smallest\r\n            },\r\n            track.album.images[0]\r\n          )\r\n\r\n          return {\r\n            artist: track.artists[0].name,\r\n            title: track.name,\r\n            uri: track.uri,\r\n            albumUrl: smallestAlbumImage.url,\r\n          }\r\n        })\r\n      )\r\n    })\r\n\r\n    return () => (cancel = true)\r\n  }, [search, accessToken])\r\n\r\n  return (\r\n    <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\r\n      <Form.Control\r\n        type=\"search\"\r\n        placeholder=\"Search Songs/Artists\"\r\n        value={search}\r\n        onChange={e => setSearch(e.target.value)}\r\n      />\r\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n        {searchResults.map(track => (\r\n          <TrackSearchResult\r\n            track={track}\r\n            key={track.uri}\r\n            chooseTrack={chooseTrack}\r\n          />\r\n        ))}\r\n        {searchResults.length === 0 && (\r\n          <div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\r\n            {lyrics}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <Player accessToken={accessToken} trackUri={playingTrack?.uri} />\r\n      </div>\r\n    </Container>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}