{"ast":null,"code":"// Some functions take a variable number of arguments, or a few expected\n// arguments at the beginning and then a variable number of values to operate\n// on. This helper accumulates all remaining arguments past the function’s\n// argument length (or an explicit `startIndex`), into an array that becomes\n// the last argument. Similar to ES6’s \"rest parameter\".\nexport default function restArguments(func, startIndex) {\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\n  return function () {\n    var length = Math.max(arguments.length - startIndex, 0),\n      rest = Array(length),\n      index = 0;\n    for (; index < length; index++) {\n      rest[index] = arguments[index + startIndex];\n    }\n    switch (startIndex) {\n      case 0:\n        return func.call(this, rest);\n      case 1:\n        return func.call(this, arguments[0], rest);\n      case 2:\n        return func.call(this, arguments[0], arguments[1], rest);\n    }\n    var args = Array(startIndex + 1);\n    for (index = 0; index < startIndex; index++) {\n      args[index] = arguments[index];\n    }\n    args[startIndex] = rest;\n    return func.apply(this, args);\n  };\n}","map":{"version":3,"names":["restArguments","func","startIndex","length","Math","max","arguments","rest","Array","index","call","args","apply"],"sources":["C:/Users/Microsoft/OneDrive/Documents/c prgramming/.dist/react js/songProject/my-app/node_modules/underscore/modules/restArguments.js"],"sourcesContent":["// Some functions take a variable number of arguments, or a few expected\n// arguments at the beginning and then a variable number of values to operate\n// on. This helper accumulates all remaining arguments past the function’s\n// argument length (or an explicit `startIndex`), into an array that becomes\n// the last argument. Similar to ES6’s \"rest parameter\".\nexport default function restArguments(func, startIndex) {\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\n  return function() {\n    var length = Math.max(arguments.length - startIndex, 0),\n        rest = Array(length),\n        index = 0;\n    for (; index < length; index++) {\n      rest[index] = arguments[index + startIndex];\n    }\n    switch (startIndex) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, arguments[0], rest);\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\n    }\n    var args = Array(startIndex + 1);\n    for (index = 0; index < startIndex; index++) {\n      args[index] = arguments[index];\n    }\n    args[startIndex] = rest;\n    return func.apply(this, args);\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,aAAaA,CAACC,IAAI,EAAEC,UAAU,EAAE;EACtDA,UAAU,GAAGA,UAAU,IAAI,IAAI,GAAGD,IAAI,CAACE,MAAM,GAAG,CAAC,GAAG,CAACD,UAAU;EAC/D,OAAO,YAAW;IAChB,IAAIC,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACC,SAAS,CAACH,MAAM,GAAGD,UAAU,EAAE,CAAC,CAAC;MACnDK,IAAI,GAAGC,KAAK,CAACL,MAAM,CAAC;MACpBM,KAAK,GAAG,CAAC;IACb,OAAOA,KAAK,GAAGN,MAAM,EAAEM,KAAK,EAAE,EAAE;MAC9BF,IAAI,CAACE,KAAK,CAAC,GAAGH,SAAS,CAACG,KAAK,GAAGP,UAAU,CAAC;IAC7C;IACA,QAAQA,UAAU;MAChB,KAAK,CAAC;QAAE,OAAOD,IAAI,CAACS,IAAI,CAAC,IAAI,EAAEH,IAAI,CAAC;MACpC,KAAK,CAAC;QAAE,OAAON,IAAI,CAACS,IAAI,CAAC,IAAI,EAAEJ,SAAS,CAAC,CAAC,CAAC,EAAEC,IAAI,CAAC;MAClD,KAAK,CAAC;QAAE,OAAON,IAAI,CAACS,IAAI,CAAC,IAAI,EAAEJ,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAEC,IAAI,CAAC;IAClE;IACA,IAAII,IAAI,GAAGH,KAAK,CAACN,UAAU,GAAG,CAAC,CAAC;IAChC,KAAKO,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGP,UAAU,EAAEO,KAAK,EAAE,EAAE;MAC3CE,IAAI,CAACF,KAAK,CAAC,GAAGH,SAAS,CAACG,KAAK,CAAC;IAChC;IACAE,IAAI,CAACT,UAAU,CAAC,GAAGK,IAAI;IACvB,OAAON,IAAI,CAACW,KAAK,CAAC,IAAI,EAAED,IAAI,CAAC;EAC/B,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}