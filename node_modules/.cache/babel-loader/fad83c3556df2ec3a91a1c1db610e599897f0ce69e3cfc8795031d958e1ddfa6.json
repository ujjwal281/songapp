{"ast":null,"code":"import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport getLength from './_getLength.js';\nimport random from './random.js';\nimport toArray from './toArray.js';\n\n// Sample **n** random values from a collection using the modern version of the\n// [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n// If **n** is not specified, returns a single random element.\n// The internal `guard` argument allows it to work with `_.map`.\nexport default function sample(obj, n, guard) {\n  if (n == null || guard) {\n    if (!isArrayLike(obj)) obj = values(obj);\n    return obj[random(obj.length - 1)];\n  }\n  var sample = toArray(obj);\n  var length = getLength(sample);\n  n = Math.max(Math.min(n, length), 0);\n  var last = length - 1;\n  for (var index = 0; index < n; index++) {\n    var rand = random(index, last);\n    var temp = sample[index];\n    sample[index] = sample[rand];\n    sample[rand] = temp;\n  }\n  return sample.slice(0, n);\n}","map":{"version":3,"names":["isArrayLike","values","getLength","random","toArray","sample","obj","n","guard","length","Math","max","min","last","index","rand","temp","slice"],"sources":["C:/Users/Microsoft/OneDrive/Documents/c prgramming/.dist/react js/songProject/my-app/node_modules/underscore/modules/sample.js"],"sourcesContent":["import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport getLength from './_getLength.js';\nimport random from './random.js';\nimport toArray from './toArray.js';\n\n// Sample **n** random values from a collection using the modern version of the\n// [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n// If **n** is not specified, returns a single random element.\n// The internal `guard` argument allows it to work with `_.map`.\nexport default function sample(obj, n, guard) {\n  if (n == null || guard) {\n    if (!isArrayLike(obj)) obj = values(obj);\n    return obj[random(obj.length - 1)];\n  }\n  var sample = toArray(obj);\n  var length = getLength(sample);\n  n = Math.max(Math.min(n, length), 0);\n  var last = length - 1;\n  for (var index = 0; index < n; index++) {\n    var rand = random(index, last);\n    var temp = sample[index];\n    sample[index] = sample[rand];\n    sample[rand] = temp;\n  }\n  return sample.slice(0, n);\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,OAAO,MAAM,cAAc;;AAElC;AACA;AACA;AACA;AACA,eAAe,SAASC,MAAMA,CAACC,GAAG,EAAEC,CAAC,EAAEC,KAAK,EAAE;EAC5C,IAAID,CAAC,IAAI,IAAI,IAAIC,KAAK,EAAE;IACtB,IAAI,CAACR,WAAW,CAACM,GAAG,CAAC,EAAEA,GAAG,GAAGL,MAAM,CAACK,GAAG,CAAC;IACxC,OAAOA,GAAG,CAACH,MAAM,CAACG,GAAG,CAACG,MAAM,GAAG,CAAC,CAAC,CAAC;EACpC;EACA,IAAIJ,MAAM,GAAGD,OAAO,CAACE,GAAG,CAAC;EACzB,IAAIG,MAAM,GAAGP,SAAS,CAACG,MAAM,CAAC;EAC9BE,CAAC,GAAGG,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACL,CAAC,EAAEE,MAAM,CAAC,EAAE,CAAC,CAAC;EACpC,IAAII,IAAI,GAAGJ,MAAM,GAAG,CAAC;EACrB,KAAK,IAAIK,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGP,CAAC,EAAEO,KAAK,EAAE,EAAE;IACtC,IAAIC,IAAI,GAAGZ,MAAM,CAACW,KAAK,EAAED,IAAI,CAAC;IAC9B,IAAIG,IAAI,GAAGX,MAAM,CAACS,KAAK,CAAC;IACxBT,MAAM,CAACS,KAAK,CAAC,GAAGT,MAAM,CAACU,IAAI,CAAC;IAC5BV,MAAM,CAACU,IAAI,CAAC,GAAGC,IAAI;EACrB;EACA,OAAOX,MAAM,CAACY,KAAK,CAAC,CAAC,EAAEV,CAAC,CAAC;AAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}