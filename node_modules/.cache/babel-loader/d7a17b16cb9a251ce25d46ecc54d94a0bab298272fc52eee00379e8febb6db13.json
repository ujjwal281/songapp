{"ast":null,"code":"// src/helpers.ts\nfunction isOfType(type) {\n  return value => typeof value === type;\n}\nvar isFunction = isOfType(\"function\");\nvar isNull = value => {\n  return value === null;\n};\nvar isRegex = value => {\n  return Object.prototype.toString.call(value).slice(8, -1) === \"RegExp\";\n};\nvar isObject = value => {\n  return !isUndefined(value) && !isNull(value) && (isFunction(value) || typeof value === \"object\");\n};\nvar isUndefined = isOfType(\"undefined\");\n\n// src/index.ts\nfunction equalArray(left, right) {\n  const {\n    length\n  } = left;\n  if (length !== right.length) {\n    return false;\n  }\n  for (let index = length; index-- !== 0;) {\n    if (!equal(left[index], right[index])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction equalArrayBuffer(left, right) {\n  if (left.byteLength !== right.byteLength) {\n    return false;\n  }\n  const view1 = new DataView(left.buffer);\n  const view2 = new DataView(right.buffer);\n  let index = left.byteLength;\n  while (index--) {\n    if (view1.getUint8(index) !== view2.getUint8(index)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction equalMap(left, right) {\n  if (left.size !== right.size) {\n    return false;\n  }\n  for (const index of left.entries()) {\n    if (!right.has(index[0])) {\n      return false;\n    }\n  }\n  for (const index of left.entries()) {\n    if (!equal(index[1], right.get(index[0]))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction equalSet(left, right) {\n  if (left.size !== right.size) {\n    return false;\n  }\n  for (const index of left.entries()) {\n    if (!right.has(index[0])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction equal(left, right) {\n  if (left === right) {\n    return true;\n  }\n  if (left && isObject(left) && right && isObject(right)) {\n    if (left.constructor !== right.constructor) {\n      return false;\n    }\n    if (Array.isArray(left) && Array.isArray(right)) {\n      return equalArray(left, right);\n    }\n    if (left instanceof Map && right instanceof Map) {\n      return equalMap(left, right);\n    }\n    if (left instanceof Set && right instanceof Set) {\n      return equalSet(left, right);\n    }\n    if (ArrayBuffer.isView(left) && ArrayBuffer.isView(right)) {\n      return equalArrayBuffer(left, right);\n    }\n    if (isRegex(left) && isRegex(right)) {\n      return left.source === right.source && left.flags === right.flags;\n    }\n    if (left.valueOf !== Object.prototype.valueOf) {\n      return left.valueOf() === right.valueOf();\n    }\n    if (left.toString !== Object.prototype.toString) {\n      return left.toString() === right.toString();\n    }\n    const leftKeys = Object.keys(left);\n    const rightKeys = Object.keys(right);\n    if (leftKeys.length !== rightKeys.length) {\n      return false;\n    }\n    for (let index = leftKeys.length; index-- !== 0;) {\n      if (!Object.prototype.hasOwnProperty.call(right, leftKeys[index])) {\n        return false;\n      }\n    }\n    for (let index = leftKeys.length; index-- !== 0;) {\n      const key = leftKeys[index];\n      if (key === \"_owner\" && left.$$typeof) {\n        continue;\n      }\n      if (!equal(left[key], right[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (Number.isNaN(left) && Number.isNaN(right)) {\n    return true;\n  }\n  return left === right;\n}\nexport { equal as default };","map":{"version":3,"names":["isOfType","type","value","isFunction","isNull","isRegex","Object","prototype","toString","call","slice","isObject","isUndefined","equalArray","left","right","length","index","equal","equalArrayBuffer","byteLength","view1","DataView","buffer","view2","getUint8","equalMap","size","entries","has","get","equalSet","constructor","Array","isArray","Map","Set","ArrayBuffer","isView","source","flags","valueOf","leftKeys","keys","rightKeys","hasOwnProperty","key","$$typeof","Number","isNaN"],"sources":["C:\\Users\\Microsoft\\OneDrive\\Documents\\c prgramming\\.dist\\react js\\songProject\\my-app\\node_modules\\@gilbarbara\\deep-equal\\src\\helpers.ts","C:\\Users\\Microsoft\\OneDrive\\Documents\\c prgramming\\.dist\\react js\\songProject\\my-app\\node_modules\\@gilbarbara\\deep-equal\\src\\index.ts"],"sourcesContent":["import { AnyObject, Primitive } from './types';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isOfType<T extends Primitive | Function>(type: string) {\n  return (value: unknown): value is T => typeof value === type;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isFunction = isOfType<Function>('function');\n\nexport const isNull = (value: unknown): value is null => {\n  return value === null;\n};\n\nexport const isRegex = (value: unknown): value is RegExp => {\n  return Object.prototype.toString.call(value).slice(8, -1) === 'RegExp';\n};\n\nexport const isObject = (value: unknown): value is AnyObject => {\n  return !isUndefined(value) && !isNull(value) && (isFunction(value) || typeof value === 'object');\n};\n\nexport const isUndefined = isOfType<undefined>('undefined');\n","import { isObject, isRegex } from './helpers';\n\nfunction equalArray(left: unknown[], right: unknown[]) {\n  const { length } = left;\n\n  if (length !== right.length) {\n    return false;\n  }\n\n  for (let index = length; index-- !== 0; ) {\n    if (!equal(left[index], right[index])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction equalArrayBuffer(left: ArrayBufferView, right: ArrayBufferView) {\n  if (left.byteLength !== right.byteLength) {\n    return false;\n  }\n\n  const view1 = new DataView(left.buffer);\n  const view2 = new DataView(right.buffer);\n\n  let index = left.byteLength;\n\n  while (index--) {\n    if (view1.getUint8(index) !== view2.getUint8(index)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction equalMap(left: Map<unknown, unknown>, right: Map<unknown, unknown>) {\n  if (left.size !== right.size) {\n    return false;\n  }\n\n  for (const index of left.entries()) {\n    if (!right.has(index[0])) {\n      return false;\n    }\n  }\n\n  for (const index of left.entries()) {\n    if (!equal(index[1], right.get(index[0]))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction equalSet(left: Set<unknown>, right: Set<unknown>) {\n  if (left.size !== right.size) {\n    return false;\n  }\n\n  for (const index of left.entries()) {\n    if (!right.has(index[0])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default function equal(left: unknown, right: unknown) {\n  if (left === right) {\n    return true;\n  }\n\n  if (left && isObject(left) && right && isObject(right)) {\n    if (left.constructor !== right.constructor) {\n      return false;\n    }\n\n    if (Array.isArray(left) && Array.isArray(right)) {\n      return equalArray(left, right);\n    }\n\n    if (left instanceof Map && right instanceof Map) {\n      return equalMap(left, right);\n    }\n\n    if (left instanceof Set && right instanceof Set) {\n      return equalSet(left, right);\n    }\n\n    if (ArrayBuffer.isView(left) && ArrayBuffer.isView(right)) {\n      return equalArrayBuffer(left, right);\n    }\n\n    if (isRegex(left) && isRegex(right)) {\n      return left.source === right.source && left.flags === right.flags;\n    }\n\n    if (left.valueOf !== Object.prototype.valueOf) {\n      return left.valueOf() === right.valueOf();\n    }\n\n    if (left.toString !== Object.prototype.toString) {\n      return left.toString() === right.toString();\n    }\n\n    const leftKeys = Object.keys(left);\n    const rightKeys = Object.keys(right);\n\n    if (leftKeys.length !== rightKeys.length) {\n      return false;\n    }\n\n    for (let index = leftKeys.length; index-- !== 0; ) {\n      if (!Object.prototype.hasOwnProperty.call(right, leftKeys[index])) {\n        return false;\n      }\n    }\n\n    for (let index = leftKeys.length; index-- !== 0; ) {\n      const key = leftKeys[index];\n\n      if (key === '_owner' && left.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (!equal(left[key], right[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (Number.isNaN(left) && Number.isNaN(right)) {\n    return true;\n  }\n\n  return left === right;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}