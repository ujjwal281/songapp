{"ast":null,"code":"var baseToString = require('./_baseToString'),\n  castSlice = require('./_castSlice'),\n  charsStartIndex = require('./_charsStartIndex'),\n  stringToArray = require('./_stringToArray'),\n  toString = require('./toString');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n    start = charsStartIndex(strSymbols, stringToArray(chars));\n  return castSlice(strSymbols, start).join('');\n}\nmodule.exports = trimStart;","map":{"version":3,"names":["baseToString","require","castSlice","charsStartIndex","stringToArray","toString","reTrimStart","trimStart","string","chars","guard","undefined","replace","strSymbols","start","join","module","exports"],"sources":["C:/Users/Microsoft/OneDrive/Documents/c prgramming/.dist/react js/songProject/my-app/node_modules/lodash/trimStart.js"],"sourcesContent":["var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      start = charsStartIndex(strSymbols, stringToArray(chars));\n\n  return castSlice(strSymbols, start).join('');\n}\n\nmodule.exports = trimStart;\n"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAiB,CAAC;EACzCC,SAAS,GAAGD,OAAO,CAAC,cAAc,CAAC;EACnCE,eAAe,GAAGF,OAAO,CAAC,oBAAoB,CAAC;EAC/CG,aAAa,GAAGH,OAAO,CAAC,kBAAkB,CAAC;EAC3CI,QAAQ,GAAGJ,OAAO,CAAC,YAAY,CAAC;;AAEpC;AACA,IAAIK,WAAW,GAAG,MAAM;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAASA,CAACC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACvCF,MAAM,GAAGH,QAAQ,CAACG,MAAM,CAAC;EACzB,IAAIA,MAAM,KAAKE,KAAK,IAAID,KAAK,KAAKE,SAAS,CAAC,EAAE;IAC5C,OAAOH,MAAM,CAACI,OAAO,CAACN,WAAW,EAAE,EAAE,CAAC;EACxC;EACA,IAAI,CAACE,MAAM,IAAI,EAAEC,KAAK,GAAGT,YAAY,CAACS,KAAK,CAAC,CAAC,EAAE;IAC7C,OAAOD,MAAM;EACf;EACA,IAAIK,UAAU,GAAGT,aAAa,CAACI,MAAM,CAAC;IAClCM,KAAK,GAAGX,eAAe,CAACU,UAAU,EAAET,aAAa,CAACK,KAAK,CAAC,CAAC;EAE7D,OAAOP,SAAS,CAACW,UAAU,EAAEC,KAAK,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AAC9C;AAEAC,MAAM,CAACC,OAAO,GAAGV,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}